--- a/third_party/flatbuffers/BUILD.bazel
+++ b/third_party/flatbuffers/BUILD.bazel
@@ -1,4 +1,4 @@
-load("@build_bazel_rules_android//android:rules.bzl", "android_library")
+#load("@build_bazel_rules_android//android:rules.bzl", "android_library")
 
 package(default_visibility = ["//visibility:public"])
 
@@ -133,8 +133,8 @@ java_library(
     visibility = ["//visibility:public"],
 )
 
-android_library(
-    name = "runtime_android",
-    srcs = [":runtime_java_srcs"],
-    visibility = ["//visibility:public"],
-)
+#android_library(
+#    name = "runtime_android",
+#    srcs = [":runtime_java_srcs"],
+#    visibility = ["//visibility:public"],
+#)
--- a/third_party/flatbuffers/build_defs.bzl
+++ b/third_party/flatbuffers/build_defs.bzl
@@ -1,6 +1,6 @@
 """BUILD rules for generating flatbuffer files."""
 
-load("@build_bazel_rules_android//android:rules.bzl", "android_library")
+#load("@build_bazel_rules_android//android:rules.bzl", "android_library")
 
 flatc_path = "@flatbuffers//:flatc"
 zip_files = "//tensorflow/lite/tools:zip_files"
@@ -600,12 +600,12 @@ def flatbuffer_android_library(
         "@org_checkerframework_qual",
     ] if "--java-checkerframework" in flatc_args else []
 
-    android_library(
-        name = name,
-        srcs = [out_srcjar],
-        javacopts = ["-source 7 -target 7"],
-        visibility = visibility,
-        deps = [
-            "@flatbuffers//:runtime_android",
-        ] + checkerframework_annotations,
-    )
+#    android_library(
+ #       name = name,
+  #      srcs = [out_srcjar],
+  #      javacopts = ["-source 7 -target 7"],
+  #      visibility = visibility,
+  #      deps = [
+  #          "@flatbuffers//:runtime_android",
+  #      ] + checkerframework_annotations,
+  #  )
